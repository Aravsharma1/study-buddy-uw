{"ast":null,"code":"var _jsxFileName = \"/Users/aumyogesh/Study-Buddy/Study-Buddy/frontend/src/components/Navbar.js\",\n  _s = $RefreshSig$();\n// src/components/Navbar.js\nimport React, { useEffect, useState } from 'react';\nimport { AppBar, Toolbar, Typography } from '@mui/material';\nimport './Navbar.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const messages = [\"Welcome to Study Buddy\", \"We help you find study buddies\"];\n  const [currentMessageIndex, setCurrentMessageIndex] = useState(0);\n  const [displayedText, setDisplayedText] = useState('');\n  const typingSpeed = 150; // Speed of typing in milliseconds\n\n  useEffect(() => {\n    let typingTimeout;\n    const typeMessage = message => {\n      let charIndex = 0;\n      const type = () => {\n        if (charIndex < message.length) {\n          setDisplayedText(prev => prev + message.charAt(charIndex));\n          charIndex++;\n          typingTimeout = setTimeout(type, typingSpeed);\n        } else {\n          // After typing the message, wait, then start deleting\n          setTimeout(() => {\n            deleteMessage(message);\n          }, 1000); // Wait 1 second before starting to delete\n        }\n      };\n      type();\n    };\n    const deleteMessage = message => {\n      let charIndex = message.length;\n      const deleteChar = () => {\n        if (charIndex > 0) {\n          setDisplayedText(prev => prev.slice(0, charIndex - 1));\n          charIndex--;\n          typingTimeout = setTimeout(deleteChar, typingSpeed);\n        } else {\n          // After deleting, switch to the next message\n          setCurrentMessageIndex(prev => (prev + 1) % messages.length);\n          setTimeout(() => {\n            typeMessage(messages[(currentMessageIndex + 1) % messages.length]);\n          }, 500); // Wait before typing the next message\n        }\n      };\n      deleteChar();\n    };\n    typeMessage(messages[currentMessageIndex]);\n    return () => clearTimeout(typingTimeout); // Clear timeout on unmount\n  }, [currentMessageIndex, messages]);\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    className: \"animated-navbar\",\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: \"text-white\",\n        children: displayedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(Navbar, \"fsTGDfFtgZ5jPMGMqV8752YrSKU=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useState","AppBar","Toolbar","Typography","jsxDEV","_jsxDEV","Navbar","_s","messages","currentMessageIndex","setCurrentMessageIndex","displayedText","setDisplayedText","typingSpeed","typingTimeout","typeMessage","message","charIndex","type","length","prev","charAt","setTimeout","deleteMessage","deleteChar","slice","clearTimeout","position","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aumyogesh/Study-Buddy/Study-Buddy/frontend/src/components/Navbar.js"],"sourcesContent":["// src/components/Navbar.js\nimport React, { useEffect, useState } from 'react';\nimport { AppBar, Toolbar, Typography } from '@mui/material';\nimport './Navbar.css'; // Import the CSS file\n\nconst Navbar = () => {\n    const messages = [\n        \"Welcome to Study Buddy\",\n        \"We help you find study buddies\"\n    ];\n\n    const [currentMessageIndex, setCurrentMessageIndex] = useState(0);\n    const [displayedText, setDisplayedText] = useState('');\n    const typingSpeed = 150; // Speed of typing in milliseconds\n\n    useEffect(() => {\n        let typingTimeout;\n\n        const typeMessage = (message) => {\n            let charIndex = 0;\n\n            const type = () => {\n                if (charIndex < message.length) {\n                    setDisplayedText((prev) => prev + message.charAt(charIndex));\n                    charIndex++;\n                    typingTimeout = setTimeout(type, typingSpeed);\n                } else {\n                    // After typing the message, wait, then start deleting\n                    setTimeout(() => {\n                        deleteMessage(message);\n                    }, 1000); // Wait 1 second before starting to delete\n                }\n            };\n\n            type();\n        };\n\n        const deleteMessage = (message) => {\n            let charIndex = message.length;\n\n            const deleteChar = () => {\n                if (charIndex > 0) {\n                    setDisplayedText((prev) => prev.slice(0, charIndex - 1));\n                    charIndex--;\n                    typingTimeout = setTimeout(deleteChar, typingSpeed);\n                } else {\n                    // After deleting, switch to the next message\n                    setCurrentMessageIndex((prev) => (prev + 1) % messages.length);\n                    setTimeout(() => {\n                        typeMessage(messages[(currentMessageIndex + 1) % messages.length]);\n                    }, 500); // Wait before typing the next message\n                }\n            };\n\n            deleteChar();\n        };\n\n        typeMessage(messages[currentMessageIndex]);\n\n        return () => clearTimeout(typingTimeout); // Clear timeout on unmount\n    }, [currentMessageIndex, messages]);\n\n    return (\n        <AppBar position=\"static\" className=\"animated-navbar\">\n            <Toolbar>\n                <Typography variant=\"h6\" className=\"text-white\">\n                    {displayedText}\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Navbar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}